[alias]
	st = status
	br = branch
	##TODO:コマンドを直接書いて実行できるようにする
	bra = !sh ~/.bash_script/git-branch-description.sh
	bre = branch --edit-description
	co = checkout
	sw = switch
	re = restore
	ci = commit
	df = diff
	ad = add
	rb = rebase
	rbi = rebase -i
	mkbr = branch
	rmbr = branch -d
	rmbrd  = branch -D
	mvbr = branch -m
	today = log --oneline --since='12 hour ago'
	cp = cherry-pick
	rp = remote prune
	sh = stash save
	sha = stash -a save
	shp = stash pop
	shd = stash drop
	shl = stash list
	mktag = tag -a
	rv = revert
	rmbra = "!f () { git branch --merged | grep -v '*' | xargs git branch -d; };f"
	
	## fuzzy xxx
	## http://repo.msys2.org/msys/x86_64/fzy-1.0-1-x86_64.pkg.tar.xz から直接DLして配置
	fco = !echo "Used git switch or git fsw"
	cof = !echo "Used git switch or git swf"
	fsw = !git sw $(git br | fzy -l 20)
	swf = !git sw $(git br | fzy -l 20)
	frmbr = !git rmbr $(git br | fzy)
	rmbrf = !git rmbr $(git br | fzy)
	frmbrd = !git rmbrd $(git br | fzy)
	rmbrdf = !git rmbrd $(git br | fzy)

	#log関連
	log-grach = log --graph --date=short --pretty=format:'%Cgreen%h %cd %Cblue%cn %Creset%s'
	log-all = log --graph --all --color --pretty='%x09%h %cn%x09%s %Cred%d%Creset'

	# mergeの際にconflictが起きたファイルを編集
	edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"

	# mergeの際にconflictが起きたファイルをadd
	add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"

	# aliasを確認するalia
	alias = !"if test -z $1; then loop=; for k in `git config --get-regexp ^alias\\. | sort | sed -e 's/^alias\\.\\(\\S*\\).*/\\1/g'`; do echo -n $k; loop="${loop}1"; if test ${#loop} -lt 5; then echo -n '\t'; else echo; loop=; fi; done; exit; fi; git config --list | grep ^alias\\.$1= | sed -e s/^alias\\.//; exit;"

	ignore = update-index --assume-unchanged
	unignore = update-index --no-assume-unchanged
	ignored = !git ls-files -v | grep "^[a-z]"
